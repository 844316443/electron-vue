{
	"Print to console": {
		"prefix": "vue",
		"body": [
			"<template>",
			"  <div class='$2'>$5</div>",
			"</template>",
			"",
			"<script>",
			"export default {",
			"// 数据区",
			"  data() {",
			"    return {",
			"",
			"    };",
			"  },",
			"  computed: {},",
			"  watch: {},",
			"// 方法区",
			"  methods: {",
			"",
			"  },",
			"// 创建期间的生命周期函数",
			"// 执行 created 时，data 和 methods 都已被初始化好了，data、methods、computed 最早只能在created中操作",
			"  created() {",
			"",
			"  },",
			"// vue 中的钩子函数，在初始化页面完成后执行",
			"// 如果希望等到整个视图都渲染完毕，可以在 mounted 内部使用 vm.$nextTick,最后执行级别",
			"  mounted() {",
			"",
			"  },",
			"// 创建期间的生命周期函数  表示实例被创建出来之前，会执行",
			"// 实例刚在内存中被创建出来时，还没有初始化好 data 和 methods 属性",
			"  beforeCreate() {},",
			"// 创建期间的生命周期函数",
			"// 模板已经在内存中编辑完成，但没有把模板渲染到页面中，页面中的元素还没有被替换",
			"  beforeMount() {},",
			"// 运行期间的生命周期函数",
			"// 修改 data 数据时，会被执行，页面显示数据还是旧的，data 中数据是最新的被修改后的",
			"  beforeUpdate() {},",
			"// 运行期间的生命周期函数",
			"// 修改 data 数据更新完后、页面被渲染完后执行",
			"  updated() {},",
			"// 销毁期间的生命周期函数",
			"// 实例销毁之前执行，实例还可以用",
			"  beforeDestroy() {},",
			"// 销毁期间的生命周期函数",
			"// 实例销毁之后执行，实例指示的东西都会解绑，事件监听会被移除，所有子实例也会被销毁",
			"  destroyed() {},",
				"  activated() {},",
			"  components: {},",
			"}",
			"</script>",
			"",
			"<style lang='scss' scoped>",
			"$4",
				"</style>"
		],
		"description": "Log output to console"
	}

}